/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_mousebird_maply_WideVectorInfo */

#ifndef _Included_com_mousebird_maply_WideVectorInfo
#define _Included_com_mousebird_maply_WideVectorInfo
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    setJoinTypeNative
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_setJoinTypeNative
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    setMitreLimit
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_setMitreLimit
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    setTexId
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_setTexId
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    setTextureRepeatLength
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_setTextureRepeatLength
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    setEdgeFalloff
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_setEdgeFalloff
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    setColor
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_setColor
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    setLineWidth
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_setLineWidth
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    nativeInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_nativeInit
  (JNIEnv *, jclass);

/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    initialise
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_initialise
  (JNIEnv *, jobject);

/*
 * Class:     com_mousebird_maply_WideVectorInfo
 * Method:    dispose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorInfo_dispose
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
