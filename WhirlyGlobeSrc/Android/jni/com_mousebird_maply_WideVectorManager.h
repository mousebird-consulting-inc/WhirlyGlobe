/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_mousebird_maply_WideVectorManager */

#ifndef _Included_com_mousebird_maply_WideVectorManager
#define _Included_com_mousebird_maply_WideVectorManager
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_mousebird_maply_WideVectorManager
 * Method:    addVectors
 * Signature: (Ljava/util/List;Lcom/mousebird/maply/WideVectorInfo;Lcom/mousebird/maply/ChangeSet;)J
 */
JNIEXPORT jlong JNICALL Java_com_mousebird_maply_WideVectorManager_addVectors
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     com_mousebird_maply_WideVectorManager
 * Method:    removeVectors
 * Signature: ([JLcom/mousebird/maply/ChangeSet;)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorManager_removeVectors
  (JNIEnv *, jobject, jlongArray, jobject);

/*
 * Class:     com_mousebird_maply_WideVectorManager
 * Method:    enableVectors
 * Signature: ([JZLcom/mousebird/maply/ChangeSet;)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorManager_enableVectors
  (JNIEnv *, jobject, jlongArray, jboolean, jobject);

/*
 * Class:     com_mousebird_maply_WideVectorManager
 * Method:    instanceVectors
 * Signature: (JLcom/mousebird/maply/WideVectorInfo;Lcom/mousebird/maply/ChangeSet;)J
 */
JNIEXPORT jlong JNICALL Java_com_mousebird_maply_WideVectorManager_instanceVectors
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     com_mousebird_maply_WideVectorManager
 * Method:    nativeInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorManager_nativeInit
  (JNIEnv *, jclass);

/*
 * Class:     com_mousebird_maply_WideVectorManager
 * Method:    initialise
 * Signature: (Lcom/mousebird/maply/Scene;)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorManager_initialise
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_mousebird_maply_WideVectorManager
 * Method:    dispose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_WideVectorManager_dispose
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
